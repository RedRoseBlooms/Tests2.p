local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Script Hub | by Red Rose",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Script Hub",
   LoadingSubtitle = "by Red Rose",
   ShowText = "Script Hub", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "ScriptHub Key",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"RedRose.txt"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("üè† Home", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Executed the script succesfully",
   Content = "you may proceed",
   Duration = 5,
   Image = nil,
})

local Button = MainTab:CreateButton({
   Name = "Ink Game | Alex",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexScriptX/Ink-Game-Script/refs/heads/main/Ink%20Game%20by%20AlexScriptX.lua"))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "Ink Game | Voidware",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/VapeVoidware/VW-Add/main/inkgame.lua", true))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "Ink Game | Sigma",
   Callback = function()
   loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/d82a88737d4c79e00995ca9384bd098e.lua"))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "Ink Game | Ringta",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/wefwef127382/inkgames.github.io/refs/heads/main/ringta.lua"))()
   end,
})

local MiscTab = Window:CreateTab("üîß Misc", nil) -- Title, Image
local MiscSection = MiscTab:CreateSection("Misc")

local Slider = MiscTab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 100},
   Increment = 10,
   Suffix = "nil",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

local frame = script.Parent
local handle = frame:WaitForChild("Handle") -- Your draggable part
local bar = frame:WaitForChild("Bar")       -- Slider background
local label = frame:WaitForChild("SpeedLabel") -- TextLabel to show value

local minSpeed = 16
local maxSpeed = 100
local dragging = false

-- Update WalkSpeed
local function updateSpeed(xPos)
	local relativeX = math.clamp(xPos - bar.AbsolutePosition.X, 0, bar.AbsoluteSize.X)
	local percent = relativeX / bar.AbsoluteSize.X
	local speed = math.floor(minSpeed + (maxSpeed - minSpeed) * percent)

	handle.Position = UDim2.new(0, relativeX, 0.5, -handle.AbsoluteSize.Y / 2)
	label.Text = "Speed: " .. speed

	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.WalkSpeed = speed
	end
end

-- Start dragging
handle.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
	end
end)

-- Stop dragging
game:GetService("UserInputService").InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

-- While dragging
game:GetService("RunService").RenderStepped:Connect(function()
	if dragging then
		updateSpeed(mouse.X)
	end
end)
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})
